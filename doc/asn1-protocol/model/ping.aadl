--  This model completes the PING example by adding deployment
--  information.
--
--  In this deployment, two nodes are defined, one task per node.
--
--  $Id: ping.aadl 401 2007-06-07 15:04:01Z hugues $
package PING
public
  with Software;
  with Deployment;
  with ocarina_drivers;
  with ocarina_buses;
  with protocol;

---------------
-- Processor --
---------------

processor the_processor
properties
  Deployment::Execution_Platform => Native;
  Priority_Range                 => 0 .. 255;
  Scheduling_Protocol => (Posix_1003_Highest_Priority_First_Protocol);
end the_processor;

processor implementation the_processor.i
end the_processor.i;

---------
-- Bus --
---------

bus Ethernet_Bus
properties
  Deployment::Transport_API => BSD_Sockets;
end Ethernet_Bus;

---------------
-- Processes --
---------------

process A
features
  Out_Port : out event data port Software::Simple_Type;
end A;

process implementation A.Impl
subcomponents
  Pinger        : thread Software::P.Impl;
connections
  port Pinger.Data_Source -> Out_Port;
end A.Impl;

process B
features
  In_Port  : in event data port Software::Simple_Type;
end B;

process implementation B.Impl
subcomponents
  Ping_Me        : thread Software::Q.Impl;
connections
  port In_Port -> Ping_Me.Data_Sink;
end B.Impl;

------------
-- System --
------------

system PING
end PING;

system implementation PING.Impl
subcomponents
  Node_A : process A.Impl;
  Node_B : process B.Impl;

  Device_A : device protocol::network_sockets.impl
    {Source_Text => ("devicesconf.c");};
  Device_B : device protocol::network_sockets.impl
    {Source_Text => ("devicesconf.c");};

  CPU_A : processor the_processor.i;
  CPU_B : processor the_processor.i;
  the_bus : bus protocol::multiprotocol.impl;
connections
  bus access the_bus -> Device_A.thebus;
  bus access the_bus -> Device_B.thebus;
  -- VERIFICATION POINT: check that the accessed devices/bus are
  -- compliant. Meaning: the intersection of bus sub-components
  -- AND the Provided_Virtual_Bus_Class of the device is not NULL.

  port Node_A.Out_Port -> Node_B.In_Port
    {
      Actual_Connection_Binding => (reference (the_bus.user_def));
      --  VERIFICATION POINT
      -- Here, if we specify the_bus.pohic_asn1, it MUST raise
      -- an error when generating the code since the device
      -- does not support it.
    };
properties
  actual_processor_binding => (reference (CPU_A)) applies to Node_A;
  actual_processor_binding => (reference (CPU_B)) applies to Node_B;
  actual_processor_binding => (reference (CPU_A)) applies to Device_A;
  actual_processor_binding => (reference (CPU_B)) applies to Device_B;
end PING.Impl;

end PING;
