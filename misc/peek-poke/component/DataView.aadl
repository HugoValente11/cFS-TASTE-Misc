--------------------------------------------------------
--! File generated by asn2aadl v1.2160: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0

DATA TASTE_Peek_id
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek-id";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END TASTE_Peek_id;

DATA TASTE_Peek_id_Buffer_Max
END TASTE_Peek_id_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_id_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_id_Buffer_Max.impl;

DATA TASTE_Peek_id_Buffer
END TASTE_Peek_id_Buffer;

DATA IMPLEMENTATION TASTE_Peek_id_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id
SUBCOMPONENTS
    Buffer : data TASTE_Peek_id_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_id_Buffer.impl;

DATA TASTE_Monitoring_list
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1064; suggested aligned message buffer is...
    Source_Data_Size => 1064 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Monitoring-list";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TASTE_Monitoring_list;

DATA TASTE_Monitoring_list_Buffer_Max
END TASTE_Monitoring_list_Buffer_Max;

DATA IMPLEMENTATION TASTE_Monitoring_list_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Monitoring_list
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1064); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Monitoring_list_Buffer_Max.impl;

DATA TASTE_Monitoring_list_Buffer
END TASTE_Monitoring_list_Buffer;

DATA IMPLEMENTATION TASTE_Monitoring_list_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Monitoring_list
SUBCOMPONENTS
    Buffer : data TASTE_Monitoring_list_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Monitoring_list_Buffer.impl;

DATA TASTE_Monitoring_value
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Monitoring-value";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END TASTE_Monitoring_value;

DATA TASTE_Monitoring_value_Buffer_Max
END TASTE_Monitoring_value_Buffer_Max;

DATA IMPLEMENTATION TASTE_Monitoring_value_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Monitoring_value
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Monitoring_value_Buffer_Max.impl;

DATA TASTE_Monitoring_value_Buffer
END TASTE_Monitoring_value_Buffer;

DATA IMPLEMENTATION TASTE_Monitoring_value_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Monitoring_value
SUBCOMPONENTS
    Buffer : data TASTE_Monitoring_value_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Monitoring_value_Buffer.impl;

DATA TASTE_Peek_list
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 184; suggested aligned message buffer is...
    Source_Data_Size => 184 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek-list";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TASTE_Peek_list;

DATA TASTE_Peek_list_Buffer_Max
END TASTE_Peek_list_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_list_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_list
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (184); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_list_Buffer_Max.impl;

DATA TASTE_Peek_list_Buffer
END TASTE_Peek_list_Buffer;

DATA IMPLEMENTATION TASTE_Peek_list_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_list
SUBCOMPONENTS
    Buffer : data TASTE_Peek_list_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_list_Buffer.impl;

DATA TASTE_Poke_list
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1064; suggested aligned message buffer is...
    Source_Data_Size => 1064 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Poke-list";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TASTE_Poke_list;

DATA TASTE_Poke_list_Buffer_Max
END TASTE_Poke_list_Buffer_Max;

DATA IMPLEMENTATION TASTE_Poke_list_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Poke_list
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1064); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Poke_list_Buffer_Max.impl;

DATA TASTE_Poke_list_Buffer
END TASTE_Poke_list_Buffer;

DATA IMPLEMENTATION TASTE_Poke_list_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Poke_list
SUBCOMPONENTS
    Buffer : data TASTE_Poke_list_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Poke_list_Buffer.impl;

DATA TASTE_Peek_id_list
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 84; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek-id-list";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TASTE_Peek_id_list;

DATA TASTE_Peek_id_list_Buffer_Max
END TASTE_Peek_id_list_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_id_list_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id_list
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_id_list_Buffer_Max.impl;

DATA TASTE_Peek_id_list_Buffer
END TASTE_Peek_id_list_Buffer;

DATA IMPLEMENTATION TASTE_Peek_id_list_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_id_list
SUBCOMPONENTS
    Buffer : data TASTE_Peek_id_list_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_id_list_Buffer.impl;

DATA TASTE_Monitoring
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 212; suggested aligned message buffer is...
    Source_Data_Size => 216 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Monitoring";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TASTE_Monitoring;

DATA TASTE_Monitoring_Buffer_Max
END TASTE_Monitoring_Buffer_Max;

DATA IMPLEMENTATION TASTE_Monitoring_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Monitoring
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (216); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Monitoring_Buffer_Max.impl;

DATA TASTE_Monitoring_Buffer
END TASTE_Monitoring_Buffer;

DATA IMPLEMENTATION TASTE_Monitoring_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Monitoring
SUBCOMPONENTS
    Buffer : data TASTE_Monitoring_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Monitoring_Buffer.impl;

DATA TASTE_Peek
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 36; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TASTE_Peek;

DATA TASTE_Peek_Buffer_Max
END TASTE_Peek_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_Buffer_Max.impl;

DATA TASTE_Peek_Buffer
END TASTE_Peek_Buffer;

DATA IMPLEMENTATION TASTE_Peek_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek
SUBCOMPONENTS
    Buffer : data TASTE_Peek_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_Buffer.impl;

DATA TASTE_Peek_limit
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    Ada_Package_Name => "TASTE_MONITORING";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TASTE-Peek-limit";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END TASTE_Peek_limit;

DATA TASTE_Peek_limit_Buffer_Max
END TASTE_Peek_limit_Buffer_Max;

DATA IMPLEMENTATION TASTE_Peek_limit_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_limit
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TASTE_Peek_limit_Buffer_Max.impl;

DATA TASTE_Peek_limit_Buffer
END TASTE_Peek_limit_Buffer;

DATA IMPLEMENTATION TASTE_Peek_limit_Buffer.impl
    -- Buffer to hold a marshalled data of type TASTE_Peek_limit
SUBCOMPONENTS
    Buffer : data TASTE_Peek_limit_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TASTE_Peek_limit_Buffer.impl;

end DataView;
