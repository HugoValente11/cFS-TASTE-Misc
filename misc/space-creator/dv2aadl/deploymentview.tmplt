{% comment %}
Template for generation of XML scheme of the whole deployment view.
==================
Every instance/object (node, partition, connection, ... - except access) has at least the following properties:
name            : Name of the object
attributes      : List of attributes
attribute.name  :  |_ Name of that attribute
attribute.value :  |_ Value of that attribute
properties      : List of properties
properties.name :  |_ Name of that property
properties.value:  |_ Value of that property
==================
The following tags are available in this template:
Nodes                    : List of all available Nodes (Boards)
node                     :  |_ Instance of node (see "for node in Nodes")
node.partitions          :  |   |_ List of partitions (binary) in that node
partition                :  |   |   |_ Instance of partition (see "for partition in node.partitions")
partitions.functions     :  |   |       |_ List of functions in that partition
function                 :  |   |           |_ Instance of function (see "for function in function in partition.functions")
node.devices             :  |   |_ List of devices (ports) in that node
device                   :  |       |_ Instance of device (see "for device in node.devices")
node.requiredBusAccesses :  |   |_ List of bus acesses in the node
device                   :  |       |_ Instance of bus access
device.name              :  |       |_ Name of the access
device.busName           :  |       |_ bus access name (has to match for both connected devices)
Connections              : List of all available Connections between devices
connection               :  |_ Instance of connection (see "for connection in Connections")
connection.messages      :      |_ List of message binding of that connection
message                  :          |_ Instance of message/binding (see "for message in connection.messages")
==================
{% endcomment %}
{% for node in Nodes %}
package deploymentview::DV::{{ node.name }}
public

 with Deployment;
 with TASTE;
 with TASTE_DV_Properties;

 {# Add all the WITH dependencies for each driver #}
 {% for device in node.devices %}
  {% for attr in device.attributes %}
   {% if attr.name == "namespace" %}
    with {{ attr.value }}; {# e.g. ocarina_drivers #}
   {% elif attr.name == "bus_namespace" %}
    with {{ attr.value }}; {# e.g. ocarina_buses #}
   {% endif %}
  {% endfor %}
 {% endfor %}

 --  Declare partition(s) of node "{{ node.name }}".
 {% for partition in node.partitions %}
 process {{ partition.name }}
 end {{ partition.name }};

 process implementation {{ partition.name }}.others
 end {{ partition.name }}.others;
 {% endfor %}

 {% for device in node.devices %}
 device {{ device.name }}
  {% for attr in device.attributes %}
   {% if attr.name == "extends" %}
    extends {{ attr.value }}; {# e.g. ocarina_drivers::generic_sockets_ip #}
   {% endif %}
  {% endfor %}
 features
  {% for attr in device.attributes %}
   {% if attr.name == "requires_bus_access" %}
    link : refined to requires bus access {{ attr.value }};
   {% endif %}
  {% endfor %}
 properties
  {% for attr in device.attributes %}
   {% if attr.name == "config" %} 
    Deployment::Configuration => "{{ attr.value }}"; -- XXX not sure it is "config" to look for
   {% elif attr.name == "asn1file" %}
    Deployment::Config => "{{ attr.value }}";
   {% endif %}
  {% endfor %}
 end {{ device.name }};

 device implementation {{ device.name }}.others
  {% for attr in device.attributes %}
   {% if attr.name == "extends" %}
    extends {{ attr.value }}; {# e.g. ocarina_drivers::generic_sockets_ip.pohic #}
   {% endif %}
  {% endfor %}
 end {{ device.name }}.others;

 {% endfor %}
end deploymentview::DV::{{ node.name }};
{% endfor %}

package deploymentview::DV
public

 with TASTE;
 with Deployment;
 with Interfaceview::IV;
 with TASTE_DV_Properties;

 {% for node in Nodes %}
 --  Dependencies of node {{ node.name }}
  {% for partition in node.partitions %}
   {% for function in partition.functions %}
 with interfaceview::IV::{{ function }};  -- XXX complete path?
   {% endfor %}
  {% endfor %}
 {% for device in node.devices %}
  {% for attr in device.attributes %}
   {% if attr.name == "bus_namespace" %}
    with {{ attr.value }}; {# e.g. ocarina_buses #}
   {% endif %}
  {% endfor %}
 {% endfor %}
 with deploymentview::DV::{{ node.name }};
  {% for attr in node.attributes %}
   {% if attr.name == "namespace" %}
 with {{ attr.value }};
   {% endif %}
  {% endfor %}
 {% endfor %}

 {% for node in Nodes %}
 --  Node {{ node.name }}
 system {{ node.name }}
 {% if node.requiredBusAccesses %}
 features
   {% for access in node.requiredBusAccesses %}
    {{ access.name }} : requires bus access {{ access.busName }};
   {% endfor %}
 {% endif %}
 end {{ node.name }};

 system implementation {{ node.name }}.others
 subcomponents
  {% for partition in node.partitions %}
   {% for function in partition.functions %}
    IV_{{ function }} : system Interfaceview::IV::{{ function }}::{{ function }}.others {  -- XXX complete path?
       Taste::FunctionName => "{{ function }}";
    };
   {% endfor %}
    {{ partition.name }} : process deploymentview::DV::{{ node.name }}::{{ partition.name }}.others; {# XXX Missing Port_Number, but what is that? #}
  {% endfor %}
   {% for attr in node.attributes %}
    {% if attr.name == "type" %}
    p1 : processor {{ attr.value }};
    {% endif %}
   {% endfor %}
  {% for device in node.devices %}
    {{ device.name }} : device deploymentview::DV::{{ node.name }}::{{ device.name }}.others;
  {% endfor %}
 -- XXX Add the "connections" section if there are buses
 properties
  {% for partition in node.partitions %}
   {% for function in partition.functions %}
    TASTE::APLC_Binding => (reference ({{ partition.name }})) applies to IV_{{ function }};
   {% endfor %}
    Actual_Processor_Binding => (reference (p1)) applies to {{ partition.name }};
  {% endfor %}
  {% for device in node.devices %}
    Actual_Processor_Binding => (reference (p1)) applies to {{ device.name }};
  {% endfor %}
 end {{ node.name}}.others;

 {% endfor %}

system deploymentview;
end deploymentview;

system implementation deploymentview.others
subcomponents
 {% for node in Nodes %}
   {{ node.name }} : system {{ node.name }}.others;
 {% endfor %}
 -- XXX Add the busses (not directly in the model)
 -- XXX Add the CONNECTIONS sections to connect the busses
 -- XXX Add the PROPERTIES with Actual_Connection_Bindings
   interfaceview: system interfaceview::IV::interfaceview.others;
end deploymentview.others;

end deploymentview::DV;
